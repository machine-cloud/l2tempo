{
  "name": "logfmt",
  "version": "0.5.1",
  "description": "Key-Value log line parser",
  "main": "logfmt.js",
  "scripts": {
    "test": "./test/test"
  },
  "bin": {
    "logfmt": "./bin/logfmt"
  },
  "devDependencies": {
    "express": "3.*",
    "mocha": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/csquared/node-logfmt"
  },
  "keywords": [
    "Log",
    "Parser",
    "logfmt"
  ],
  "author": {
    "name": "csquared"
  },
  "license": "BSD",
  "readme": "# node-logfmt\n\n## install\n\n    npm install logfmt\n\n# use\n\n```javascript\nvar logfmt = require('logfmt');\n```\n\n## logging\n\n### `logfmt.log()`\n\nDefaults to logging to `process.stdout`\n\n```javascript\nvar logfmt = require('logfmt');\nlogfmt.log({ \"foo\": \"bar\", \"a\": 14, baz: 'hello kitty'})\n//=> foo=bar a=14 baz=\"hello kitty\"\n```\n\n### customizing logging location\n\n`log()` Accepts as 2nd arg anything that responds to `write(string)`\n```javascript\nvar logfmt = require('logfmt');\nlogfmt.log({ \"foo\": \"bar\", \"a\": 14, baz: 'hello kitty'}, process.stderr)\n//=> foo=bar a=14 baz=\"hello kitty\"\n```\n\nOverwrite the default location by setting `.stream`\n```javascript\nvar logfmt = require('logfmt');\nlogfmt.stream = process.stderr\n\nlogfmt.log({ \"foo\": \"bar\", \"a\": 14, baz: 'hello kitty'})\n//=> foo=bar a=14 baz=\"hello kitty\"\n```\n\n\n## parser\n\n### `logfmt.parse()`\n\n```javascript\nvar logfmt = require('logfmt');\n\nlogfmt.parse(\"foo=bar a=14 baz=\\\"hello kitty\\\" cool%story=bro f %^asdf code=H12\")\n//=>{ \"foo\": \"bar\", \"a\": 14, \"baz\": \"hello kitty\", \"cool%story\": \"bro\", \"f\": true, \"%^asdf\": true, \"code\" : \"H12\" }\n```\n\n### express middleware\n\nRequires `express` to be installed\n\n```javascript\nvar logfmt   = require('logfmt-body-parser');\n\napp.use(logfmt());\n\n// req.body is now an array of objects\napp.post('/logs', function(req, res){\n\n  console.log('BODY: ' + JSON.stringify(req.body));\n\n  req.body.forEach(function(data){\n    console.log(data);\n  });\n\n  res.send('OK');\n})\n\napp.listen(3000)\n```\n\ntest it:\n\n```bash\ncurl -X POST --header 'Content-Type: application/logplex-1' -d \"foo=bar a=14 baz=\\\"hello kitty\\\" cool%story=bro f %^asdf\" http://localhost:3000/logs\n```\n\n### command line\n\naccepts lines on STDIN and converts them to json\n\n\n    echo \"foo=bar a=14 baz=\\\"hello kitty\\\" cool%story=bro f %^asdf\" | logfmt\n    { \"foo\": \"bar\", \"a\": 14, \"baz\": \"hello kitty\", \"cool%story\": \"bro\", \"f\": true, \"%^asdf\": true }\n\n#### reverse\n\naccepts JSON on STDIN and converts them to logfmt\n\n    echo '{ \"foo\": \"bar\", \"a\": 14, \"baz\": \"hello kitty\", \"cool%story\": \"bro\", \"f\": true, \"%^asdf\": true }' | logfmt -r\n    foo=bar a=14 baz=\"hello kitty\" cool%story=bro f=true %^asdf=true\n\n    echo \"foo=bar a=14 baz=\\\"hello kitty\\\" cool%story=bro f %^asdf\" | logfmt | logfmt -r | logfmt\n    { \"foo\": \"bar\", \"a\": 14, \"baz\": \"hello kitty\", \"cool%story\": \"bro\", \"f\": true, \"%^asdf\": true }\n\n## caveats\n\nI use a regex and haven't optimized much for performance yet.\n",
  "readmeFilename": "README.md",
  "_id": "logfmt@0.5.1",
  "dist": {
    "shasum": "c8f35e6fb1a425d5298557f8b98730b28c9c8d87"
  },
  "_from": "logfmt@0.5.1",
  "_resolved": "https://registry.npmjs.org/logfmt/-/logfmt-0.5.1.tgz"
}
